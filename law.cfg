[core]

# inherit from the columnflow configuration file
inherit: $CF_BASE/law.cfg


[modules]

mtt.tasks
columnflow.tasks.cms.inference
columnflow.tasks.cms.external

[logging]

law: INFO
luigi-interface: INFO
gfal2: WARNING

[analysis]

default_analysis: mtt.config.run2.analysis_mtt.analysis_mtt
default_config: run2_mtt_2017_nano_v9_limited
default_dataset: tt_sl_powheg

production_modules: columnflow.production.{categories,normalization,mc_weight,pileup,processes,seeds}, mtt.production.{default,features,lepton,neutrino,ttbar_reco,ttbar_gen,ml_inputs}
calibration_modules: columnflow.calibration.jets, mtt.calibration.{default,test}
selection_modules: mtt.selection.categories, mtt.selection.default, mtt.selection.default_without_2d_selection, mtt.production.categories
reduction_modules: columnflow.reduction.default, mtt.reduction.default
categorization_modules: columnflow.categorization, mtt.production.categories
weight_production_modules: columnflow.weight.{empty,all_weights}
ml_modules: mtt.ml.simple, mtt.ml.simple_pimped
inference_modules: mtt.inference.{an_2019_197,simple}

# whether or not the ensure_proxy decorator should be skipped, even if used by task's run methods
skip_ensure_proxy: False

# some remote workflow parameter defaults
htcondor_flavor: naf
htcondor_share_software: False
slurm_flavor: maxwell
slurm_partition: $CF_SLURM_PARTITION

# ChunkedIOHandler defaults
chunked_io_chunk_size: 100000
chunked_io_pool_size: 2
chunked_io_debug: False

# csv list of task families that inherit from ChunkedReaderMixin and whose output arrays should be
# checked (raising an exception) for non-finite values before saving them to disk
# supported tasks are: cf.CalibrateEvents, cf.SelectEvents, cf.ProduceColumns, cf.PrepareMLEvents,
# cf.MLEvaluation, cf.UniteColumns
check_finite_output: None


[outputs]

# list of all used file systems
wlcg_file_systems: wlcg_fs, wlcg_fs_desy, wlcg_fs_cernbox, wlcg_fs_desy_store, wlcg_fs_infn_redirector, wlcg_fs_global_redirector

# list of file systems used by columnflow.tasks.external.GetDatasetLFNs.iter_nano_files to
# look for the correct fs per nano input file (in that order)
lfn_sources: local_desy_dcache, wlcg_fs_desy_store, wlcg_fs_infn_redirector, wlcg_fs_global_redirector

# output locations per task family
# for local targets : "local[, STORE_PATH]"
# for remote targets: "wlcg[, WLCG_FS_NAME]"
task_cf.BundleRepo: local
task_cf.BundleSoftware: local
task_cf.BundleBashSandbox: local
task_cf.BundleCMSSWSandbox: local
task_cf.BundleExternalFiles: local
# NOTE: at some point, switch output location of more tasks to a common space (wlcg or local)
task_cf.GetDatasetLFNs: local
task_cf.CalibrateEvents: wlcg
task_cf.SelectEvents: wlcg
task_cf.CreateCutflowHistograms: wlcg
task_cf.PlotCutflow: local
task_cf.PlotCutflowVariables: wlcg
task_cf.ReduceEvents: wlcg
task_cf.MergeReducedEvents: wlcg
task_cf.ProduceColumns: wlcg
task_cf.PrepareMLEvents: wlcg
task_cf.MergeMLEvents: wlcg
task_cf.MLTraining: wlcg
task_cf.MLEvaluation: wlcg
task_cf.CreateHistograms: local
task_cf.MergeHistograms: local
task_cf.MergeShiftedHistograms: local
task_cf.PlotVariables: local
task_cf.PlotShiftedVariables: local
task_cf.CreateDatacards: local


[job]

job_file_dir: $CF_JOB_BASE
job_file_dir_cleanup: False
job_file_dir_mkdtemp: sub_{{task_id}}_XXX


[local_desy_dcache]

base: /pnfs/desy.de/cms/tier2


[wlcg_fs]

base: &::wlcg_fs_desy::base
create_file_dir: True
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 50GB


[wlcg_fs_desy]

xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/$CF_CERN_USER/$CF_STORE_NAME
gsiftp_base: gsiftp://dcache-cms-gridftp.desy.de/pnfs/desy.de/cms/tier2/store/user/$CF_CERN_USER/$CF_STORE_NAME
webdav_base: davs://dcache-cms-webdav-wan.desy.de:2880/pnfs/desy.de/cms/tier2/store/user/$CF_CERN_USER/$CF_STORE_NAME
base: &::webdav_base
# base: &::gsiftp_base


[wlcg_fs_cernbox]

xrootd_base: root://eosuser.cern.ch/eos/user/$CF_CERN_USER_FIRSTCHAR/$CF_CERN_USER/$CF_STORE_NAME
base: &::xrootd_base


[wlcg_fs_desy_store]

xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2
gsiftp_base: gsiftp://dcache-door-cms04.desy.de:2811/pnfs/desy.de/cms/tier2
base: &::xrootd_base
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1


[wlcg_fs_infn_redirector]

base: root://xrootd-cms.infn.it/
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1


[wlcg_fs_global_redirector]

base: root://cms-xrd-global.cern.ch/
use_cache: $CF_WLCG_USE_CACHE
cache_root: $CF_WLCG_CACHE_ROOT
cache_cleanup: $CF_WLCG_CACHE_CLEANUP
cache_max_size: 15GB
cache_global_lock: True
cache_mtime_patience: -1


[wlcg_fs_desy_dsavoiu]

xrootd_base: root://dcache-cms-xrootd.desy.de:1094/pnfs/desy.de/cms/tier2/store/user/dsavoiu/mtt_store
gsiftp_base: gsiftp://dcache-door-cms04.desy.de:2811/pnfs/desy.de/cms/tier2/store/user/dsavoiu/mtt_store
base: &::gsiftp_base

